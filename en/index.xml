<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overlord</title><link>https://bbva.github.io/Overlord/en/</link><description>Recent content on Overlord</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><lastBuildDate>Fri, 05 Nov 2021 12:34:51 +0100</lastBuildDate><atom:link href="https://bbva.github.io/Overlord/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Ruler</title><link>https://bbva.github.io/Overlord/en/overview/actors/ruler/</link><pubDate>Fri, 05 Nov 2021 12:34:51 +0100</pubDate><guid>https://bbva.github.io/Overlord/en/overview/actors/ruler/</guid><description>The rule creation process for Overlord is fairly straightforward, but requires an understanding of the rules-specific DSL. The creator of Rules is the Overlord user who understands security problems and wants to add value by designing generic tests on controls (what needs to be verified).
In this case, the community will be its main objective, since the creation of rules adds value within it in the form of consolidation of how to recognize that a control is effectively working as designed, and that both the generic test and the adaptation for a specific environment can be shared and contrasted with the rest of the industry, facilitating the discussion about something factual and verifiable</description></item><item><title>SRM</title><link>https://bbva.github.io/Overlord/en/overview/actors/srm/</link><pubDate>Wed, 03 Nov 2021 11:40:50 +0100</pubDate><guid>https://bbva.github.io/Overlord/en/overview/actors/srm/</guid><description>Security Risk Manager focuses on threat modeling, risks, and controls to mitigate them. However, they usually lose the last mile of verification that the controls they specified are operational or not, especially in Continuous Deployment and Infrastructure as Code environments, so Overlord should be one of the tools that can provide them the most value.
Having a complete view of all controls across the company is a task addressed by risk management software (ASR&amp;amp;TM: Application Security Requirements and Threat Modeling, or GRC/IRM).</description></item><item><title>Programmer</title><link>https://bbva.github.io/Overlord/en/overview/actors/programmer/</link><pubDate>Fri, 29 Oct 2021 11:52:55 +0200</pubDate><guid>https://bbva.github.io/Overlord/en/overview/actors/programmer/</guid><description>From a programmer&amp;rsquo;s perspective the idea of a universal tool may sound crazy. We are used to dealing with software as a whole that must solve the problem; although microservices are changing this trend slowly.
But the automatic search for paths and ancillary information that Overlord needs so that it can be developed independently is not something that can be &amp;ldquo;solved&amp;rdquo; globally. We need a smart, modular and extensible approach. Like an operating system or a compiler.</description></item><item><title>Examples</title><link>https://bbva.github.io/Overlord/en/dronetown/examples/</link><pubDate>Thu, 28 Oct 2021 10:11:57 +0200</pubDate><guid>https://bbva.github.io/Overlord/en/dronetown/examples/</guid><description/></item><item><title>Proc</title><link>https://bbva.github.io/Overlord/en/dronetown/proc/</link><pubDate>Thu, 28 Oct 2021 10:11:50 +0200</pubDate><guid>https://bbva.github.io/Overlord/en/dronetown/proc/</guid><description/></item><item><title>Agents</title><link>https://bbva.github.io/Overlord/en/dronetown/agents/</link><pubDate>Thu, 28 Oct 2021 10:11:42 +0200</pubDate><guid>https://bbva.github.io/Overlord/en/dronetown/agents/</guid><description/></item><item><title>Rules</title><link>https://bbva.github.io/Overlord/en/overview/rules/</link><pubDate>Tue, 26 Oct 2021 12:14:39 +0200</pubDate><guid>https://bbva.github.io/Overlord/en/overview/rules/</guid><description>In the case of the execution of a complete rule, we can see the complete abstraction process from the most general rule to the piece of code finally executed.
This is a simple example; a failed rule, an incomplete rule and other secondary scenarios are reserved for other examples. Currently the Overlord PoC is focused on viability so it develops just the &amp;ldquo;Happy Path&amp;rdquo;.
The complete log is also excluded from this example, because due to its length it would be very complex to explain in detail.</description></item></channel></rss>